package mh;

import java.awt.Graphics;
import java.awt.Point;

/**
 * <pre>
 *  Compact form of HP150 vector font.
 * 
 *  origin: at upper left of cell.
 *  x positive to the right
 *  y positive down
 * 
 *          'A'       '['    ...  example characters
 *  row
 * 10:   6:  o--- A---+   [[[[    --- umlauts
 *           |   A A  |   [       --- ascent
 *           |   A A  |   [
 *           |  A   A |   [
 *           |  AAAAA |   [       0 ... 6 = 7 nominal character height
 *           |  A   A |   [
 *  4:   0:  | _A__ A_|   [       ___ base line
 *           |    |   |   [       
 *      -2:  + ---+---+   [[[[    --- underline
 *  1:        01234567
 *  character height = 7
 *  character width = 5
 *  cell height: 9 (then '()[]{}/|[' on subsequent lines just touch)
 *  cell with: 8
 *  0x7f = 127 is a "pen up" code, the pen is lowered again at the next point
 * </pre>
 * 
 * @author Martin Hepperle
 * 
 */
public class VectorFont
{
	// scaling for desired size in pixels
	private float m_xFactor = 1.0f;
	private float m_yFactor = 1.0f;
	private boolean m_slanted = false;

	final static int ANGLE_0 = 0;
	final static int ANGLE_90 = 90;
	final static int ANGLE_180 = 180;
	final static int ANGLE_270 = 270;
	// this implementation would allow any angle above 4 degrees in steps of 1
	// degree (not per HP specification)
	private int m_angle = ANGLE_0;

	// HP 150
	byte charVector[][] = {
			// ASCII(32)
			{ 7, 0 },
			// ASCII(33)
			{ 7, 9, 4, 10, 4, 6, 127, 4, 4, 4, 4 },
			// ASCII(34)
			{ 7, 9, 3, 10, 3, 8, 127, 5, 10, 5, 8 },
			// ASCII(35)
			{ 7, 19, 4, 10, 3, 4, 127, 6, 10, 5, 4, 127, 2, 8, 7, 8, 127, 2, 6,
					7, 6 },
			// ASCII(36)
			{ 7, 21, 2, 5, 5, 5, 6, 6, 5, 7, 3, 7, 2, 8, 3, 9, 6, 9, 127, 4,
					10, 4, 4 },
			// ASCII(37)
			{ 7, 29, 3, 10, 2, 10, 2, 9, 3, 9, 3, 10, 4, 9, 5, 9, 6, 10, 2, 4,
					127, 6, 4, 5, 4, 5, 5, 6, 5, 6, 4 },
			// ASCII(38)
			{ 7, 22, 6, 6, 4, 4, 3, 4, 2, 5, 2, 6, 4, 8, 4, 9, 3, 10, 2, 9, 2,
					8, 6, 4 },
			// ASCII(39)
			{ 7, 14, 5, 9, 4, 9, 4, 10, 5, 10, 5, 9, 5, 8, 4, 7 },
			// ASCII(40)
			{ 7, 8, 5, 10, 3, 8, 3, 6, 5, 4 },
			// ASCII(41)
			{ 7, 8, 3, 10, 5, 8, 5, 6, 3, 4 },
			// ASCII(42)
			{ 7, 23, 2, 7, 6, 7, 127, 5, 9, 4, 8, 4, 6, 5, 5, 127, 3, 9, 4, 8,
					127, 3, 5, 4, 6 },
			// ASCII(43)
			{ 7, 9, 2, 7, 6, 7, 127, 4, 9, 4, 5 },
			// ASCII(44)
			{ 7, 14, 5, 4, 4, 4, 4, 5, 5, 5, 5, 4, 5, 3, 4, 2 },
			// ASCII(45)
			{ 7, 4, 2, 7, 6, 7 },
			// ASCII(46)
			{ 7, 10, 5, 4, 4, 4, 4, 5, 5, 5, 5, 4 },
			// ASCII(47)
			{ 7, 4, 2, 5, 6, 9 },
			// ASCII(48)
			{ 7, 27, 3, 10, 2, 8, 2, 6, 127, 5, 4, 3, 4, 2, 6, 127, 5, 4, 6, 6,
					6, 8, 127, 3, 10, 5, 10, 6, 8 },
			// ASCII(49)
			{ 7, 11, 2, 9, 4, 10, 4, 4, 127, 2, 4, 6, 4 },
			// ASCII(50)
			{ 7, 22, 2, 9, 3, 10, 5, 10, 6, 9, 6, 8, 5, 7, 4, 7, 3, 7, 2, 6, 2,
					4, 6, 4 },
			// ASCII(51)
			{ 7, 27, 2, 5, 3, 4, 5, 4, 6, 5, 6, 6, 5, 7, 4, 7, 127, 5, 7, 6, 8,
					6, 9, 5, 10, 3, 10, 2, 9 },
			// ASCII(52)
			{ 7, 10, 5, 4, 5, 10, 2, 7, 2, 6, 6, 6 },
			// ASCII(53)
			{ 7, 20, 2, 5, 3, 4, 5, 4, 6, 5, 6, 7, 5, 8, 3, 8, 2, 7, 2, 10, 6,
					10 },
			// ASCII(54)
			{ 7, 22, 5, 10, 4, 10, 2, 8, 2, 5, 3, 4, 5, 4, 6, 5, 6, 6, 5, 7, 3,
					7, 2, 6 },
			// ASCII(55)
			{ 7, 10, 2, 10, 6, 10, 6, 9, 3, 6, 3, 4 },
			// ASCII(56)
			{ 7, 32, 3, 7, 2, 8, 2, 9, 3, 10, 5, 10, 6, 9, 6, 8, 5, 7, 3, 7, 2,
					6, 2, 5, 3, 4, 5, 4, 6, 5, 6, 6, 5, 7 },
			// ASCII(57)
			{ 7, 22, 3, 4, 4, 4, 6, 6, 6, 9, 5, 10, 3, 10, 2, 9, 2, 8, 3, 7, 5,
					7, 6, 8 },
			// ASCII(58)
			{ 7, 21, 4, 4, 5, 4, 5, 5, 4, 5, 4, 4, 127, 4, 7, 4, 8, 5, 8, 5, 7,
					4, 7 },
			// ASCII(59)
			{ 7, 25, 5, 4, 4, 4, 4, 5, 5, 5, 5, 4, 5, 3, 4, 2, 127, 4, 7, 4, 8,
					5, 8, 5, 7, 4, 7 },
			// ASCII(60)
			{ 7, 6, 5, 10, 2, 7, 5, 4 },
			// ASCII(61)
			{ 7, 9, 2, 8, 6, 8, 127, 6, 6, 2, 6 },
			// ASCII(62)
			{ 7, 6, 3, 10, 6, 7, 3, 4 },
			// ASCII(63)
			{ 7, 19, 2, 9, 3, 10, 5, 10, 6, 9, 6, 8, 4, 7, 4, 6, 127, 4, 4, 4,
					4 },
			// ASCII(64)
			{ 7, 22, 5, 4, 3, 4, 2, 5, 2, 9, 3, 10, 5, 10, 6, 9, 6, 6, 4, 6, 4,
					8, 6, 8 },
			// ASCII(65)
			{ 7, 17, 2, 4, 2, 9, 3, 10, 5, 10, 6, 9, 6, 4, 127, 6, 6, 2, 6 },
			// ASCII(66)
			{ 7, 28, 2, 4, 5, 4, 6, 5, 6, 6, 5, 7, 2, 7, 127, 5, 7, 6, 8, 6, 9,
					5, 10, 2, 10, 127, 2, 10, 2, 4 },
			// ASCII(67)
			{ 7, 16, 6, 9, 5, 10, 3, 10, 2, 9, 2, 5, 3, 4, 5, 4, 6, 5 },
			// ASCII(68)
			{ 7, 17, 2, 4, 5, 4, 6, 5, 6, 9, 5, 10, 2, 10, 127, 2, 10, 2, 4 },
			// ASCII(69)
			{ 7, 15, 6, 10, 2, 10, 2, 7, 4, 7, 127, 2, 7, 2, 4, 6, 4 },
			// ASCII(70)
			{ 7, 11, 2, 4, 2, 10, 6, 10, 127, 4, 7, 2, 7 },
			// ASCII(71)
			{ 7, 20, 6, 9, 5, 10, 3, 10, 2, 9, 2, 5, 3, 4, 5, 4, 6, 5, 6, 7, 4,
					7 },
			// ASCII(72)
			{ 7, 16, 2, 4, 2, 10, 127, 6, 10, 6, 7, 2, 7, 127, 6, 7, 6, 4 },
			// ASCII(73)
			{ 7, 14, 3, 10, 5, 10, 127, 4, 10, 4, 4, 127, 3, 4, 5, 4 },
			// ASCII(74)
			{ 7, 12, 2, 6, 2, 5, 3, 4, 5, 4, 6, 5, 6, 10 },
			// ASCII(75)
			{ 7, 14, 2, 4, 2, 10, 127, 6, 10, 2, 6, 127, 3, 7, 6, 4 },
			// ASCII(76)
			{ 7, 6, 2, 10, 2, 4, 6, 4 },
			// ASCII(77)
			{ 7, 10, 2, 4, 2, 10, 4, 8, 6, 10, 6, 4 },
			// ASCII(78)
			{ 7, 8, 2, 4, 2, 10, 6, 4, 6, 10 },
			// ASCII(79)
			{ 7, 18, 5, 4, 3, 4, 2, 5, 2, 9, 3, 10, 5, 10, 6, 9, 6, 5, 5, 4 },
			// ASCII(80)
			{ 7, 14, 2, 4, 2, 10, 5, 10, 6, 9, 6, 8, 5, 7, 2, 7 },
			// ASCII(81)
			{ 7, 23, 5, 4, 3, 4, 2, 5, 2, 9, 3, 10, 5, 10, 6, 9, 6, 5, 5, 4,
					127, 5, 6, 7, 4 },
			// ASCII(82)
			{ 7, 19, 2, 4, 2, 10, 5, 10, 6, 9, 6, 8, 5, 7, 2, 7, 127, 3, 7, 6,
					4 },
			// ASCII(83)
			{ 7, 24, 2, 5, 3, 4, 5, 4, 6, 5, 6, 6, 5, 7, 3, 7, 2, 8, 2, 9, 3,
					10, 5, 10, 6, 9 },
			// ASCII(84)
			{ 7, 9, 4, 4, 4, 10, 127, 2, 10, 6, 10 },
			// ASCII(85)
			{ 7, 12, 2, 10, 2, 5, 3, 4, 5, 4, 6, 5, 6, 10 },
			// ASCII(86)
			{ 7, 13, 2, 10, 2, 9, 4, 4, 127, 6, 10, 6, 9, 4, 4 },
			// ASCII(87)
			{ 7, 10, 2, 10, 2, 4, 4, 6, 6, 4, 6, 10 },
			// ASCII(88)
			{ 7, 17, 2, 10, 2, 9, 6, 5, 6, 4, 127, 6, 10, 6, 9, 2, 5, 2, 4 },
			// ASCII(89)
			{ 7, 15, 2, 10, 2, 9, 4, 7, 4, 4, 127, 6, 10, 6, 9, 4, 7 },
			// ASCII(90)
			{ 7, 8, 2, 10, 6, 10, 2, 4, 6, 4 },
			// ASCII(91)
			{ 7, 8, 5, 4, 3, 4, 3, 10, 5, 10 },
			// ASCII(92)
			{ 7, 4, 2, 9, 6, 5 },
			// ASCII(93)
			{ 7, 8, 3, 4, 5, 4, 5, 10, 3, 10 },
			// ASCII(94)
			{ 7, 6, 2, 8, 4, 10, 6, 8 },
			// ASCII(95)
			{ 7, 4, 1, 2, 7, 2 },
			// ASCII(96)
			{ 7, 12, 3, 9, 4, 9, 4, 10, 3, 10, 3, 8, 4, 7 },
			// ASCII(97)
			{ 7, 21, 3, 8, 5, 8, 6, 7, 6, 4, 127, 6, 5, 5, 6, 3, 6, 2, 5, 3, 4,
					7, 4 },
			// ASCII(98)
			{ 7, 21, 2, 4, 2, 10, 127, 2, 7, 3, 8, 5, 8, 6, 7, 6, 5, 5, 4, 3,
					4, 2, 5 },
			// ASCII(99)
			{ 7, 12, 5, 8, 3, 8, 2, 7, 2, 5, 3, 4, 5, 4 },
			// ASCII(100)
			{ 7, 21, 6, 5, 5, 4, 3, 4, 2, 5, 2, 7, 3, 8, 5, 8, 6, 7, 127, 6, 4,
					6, 10 },
			// ASCII(101)
			{ 7, 18, 2, 6, 6, 6, 6, 7, 5, 8, 3, 8, 2, 7, 2, 5, 3, 4, 6, 4 },
			// ASCII(102)
			{ 7, 15, 3, 4, 3, 9, 4, 10, 5, 10, 6, 9, 127, 5, 7, 2, 7 },
			// ASCII(103)
			{ 7, 27, 2, 3, 3, 2, 5, 2, 6, 3, 6, 8, 127, 6, 7, 5, 8, 3, 8, 2, 7,
					2, 6, 3, 5, 5, 5, 6, 6 },
			// ASCII(104)
			{ 7, 15, 2, 4, 2, 10, 127, 2, 7, 3, 8, 5, 8, 6, 7, 6, 4 },
			// ASCII(105)
			{ 7, 16, 4, 10, 4, 10, 127, 3, 8, 4, 8, 4, 4, 127, 3, 4, 5, 4 },
			// ASCII(106)
			{ 7, 17, 5, 10, 5, 10, 127, 4, 8, 5, 8, 5, 3, 4, 2, 3, 2, 2, 3 },
			// ASCII(107)
			{ 7, 14, 3, 4, 3, 10, 127, 6, 8, 3, 5, 127, 4, 6, 6, 4 },
			// ASCII(108)
			{ 7, 11, 3, 10, 4, 10, 4, 4, 127, 3, 4, 5, 4 },
			// ASCII(109)
			{ 7, 22, 2, 4, 2, 8, 127, 2, 7, 3, 8, 4, 7, 4, 4, 127, 4, 7, 5, 8,
					6, 7, 6, 4 },
			// ASCII(110)
			{ 7, 15, 2, 4, 2, 8, 127, 2, 6, 4, 8, 5, 8, 6, 7, 6, 4 },
			// ASCII(111)
			{ 7, 18, 5, 4, 3, 4, 2, 5, 2, 7, 3, 8, 5, 8, 6, 7, 6, 5, 5, 4 },
			// ASCII(112)
			{ 7, 21, 2, 2, 2, 8, 127, 2, 7, 3, 8, 5, 8, 6, 7, 6, 5, 5, 4, 3, 4,
					2, 5 },
			// ASCII(113)
			{ 7, 21, 6, 5, 5, 4, 3, 4, 2, 5, 2, 7, 3, 8, 5, 8, 6, 7, 127, 6, 8,
					6, 2 },
			// ASCII(114)
			{ 7, 13, 2, 4, 2, 8, 127, 2, 6, 4, 8, 5, 8, 6, 7 },
			// ASCII(115)
			{ 7, 16, 2, 4, 5, 4, 6, 5, 5, 6, 3, 6, 2, 7, 3, 8, 6, 8 },
			// ASCII(116)
			{ 7, 13, 3, 8, 5, 8, 127, 4, 10, 4, 5, 5, 4, 6, 4 },
			// ASCII(117)
			{ 7, 17, 2, 8, 2, 5, 3, 4, 5, 4, 6, 5, 127, 6, 8, 6, 5, 7, 4 },
			// ASCII(118)
			{ 7, 9, 4, 4, 2, 8, 127, 4, 4, 6, 8 },
			// ASCII(119)
			{ 7, 21, 2, 8, 2, 6, 2, 5, 3, 4, 4, 5, 4, 6, 127, 4, 5, 5, 4, 6, 5,
					6, 8 },
			// ASCII(120)
			{ 7, 9, 2, 8, 6, 4, 127, 6, 8, 2, 4 },
			// ASCII(121)
			{ 7, 11, 2, 2, 3, 2, 6, 8, 127, 2, 8, 4, 5 },
			// ASCII(122)
			{ 7, 8, 2, 8, 6, 8, 2, 4, 6, 4 },
			// ASCII(123)
			{ 7, 23, 6, 10, 5, 10, 4, 9, 4, 8, 3, 7, 2, 7, 127, 3, 7, 4, 6, 4,
					5, 5, 4, 6, 4 },
			// ASCII(124)
			{ 7, 4, 4, 4, 4, 10 },
			// ASCII(125)
			{ 7, 23, 2, 10, 3, 10, 4, 9, 4, 8, 5, 7, 6, 7, 127, 5, 7, 4, 6, 4,
					5, 3, 4, 2, 4 },
			// ASCII(126)
			{ 7, 12, 2, 9, 3, 10, 4, 10, 5, 9, 6, 9, 7, 10 },
			// ASCII(127)
			{ 7, 22, 2, 4, 2, 9, 3, 10, 5, 10, 6, 9, 6, 4, 127, 6, 6, 2, 6,
					127, 4, 11, 3, 12 },
			// ASCII(128)
			{ 7, 24, 2, 4, 2, 9, 3, 10, 5, 10, 6, 9, 6, 4, 127, 6, 6, 2, 6,
					127, 3, 11, 4, 12, 5, 11 },
			// ASCII(129)
			{ 7, 20, 6, 10, 2, 10, 2, 7, 4, 7, 127, 2, 7, 2, 4, 6, 4, 127, 4,
					11, 3, 12 },
			// ASCII(130)
			{ 7, 22, 6, 10, 2, 10, 2, 7, 4, 7, 127, 2, 7, 2, 4, 6, 4, 127, 3,
					11, 4, 12, 5, 11 },
			// ASCII(131)
			{ 7, 37, 6, 10, 2, 10, 2, 7, 4, 7, 127, 2, 7, 2, 4, 6, 4, 127, 3,
					11, 2, 11, 2, 12, 3, 12, 3, 11, 127, 5, 11, 6, 11, 6, 12,
					5, 12, 5, 11 },
			// ASCII(132)
			{ 7, 21, 3, 10, 5, 10, 127, 4, 10, 4, 4, 127, 3, 4, 5, 4, 127, 3,
					11, 4, 12, 5, 11 },
			// ASCII(133)
			{ 7, 36, 3, 10, 5, 10, 127, 4, 10, 4, 4, 127, 3, 4, 5, 4, 127, 3,
					11, 2, 11, 2, 12, 3, 12, 3, 11, 127, 5, 11, 6, 11, 6, 12,
					5, 12, 5, 11 },
			// ASCII(134)
			{ 7, 4, 3, 10, 5, 12 },
			// ASCII(135)
			{ 7, 4, 5, 10, 3, 12 },
			// ASCII(136)
			{ 7, 6, 3, 10, 4, 11, 5, 10 },
			// ASCII(137)
			{ 7, 31, 3, 10, 2, 10, 2, 11, 3, 11, 3, 10, 127, 3, 10, 3, 10, 127,
					5, 10, 6, 10, 6, 11, 5, 11, 5, 10, 127, 5, 10, 5, 10 },
			// ASCII(138)
			{ 7, 12, 2, 10, 3, 11, 4, 11, 5, 10, 6, 10, 7, 11 },
			// ASCII(139)
			{ 7, 17, 2, 10, 2, 5, 3, 4, 5, 4, 6, 5, 6, 10, 127, 4, 11, 3, 12 },
			// ASCII(140)
			{ 7, 19, 2, 10, 2, 5, 3, 4, 5, 4, 6, 5, 6, 10, 127, 3, 11, 4, 12,
					5, 11 },
			// ASCII(141)
			{ 7, 32, 6, 10, 5, 11, 4, 11, 3, 10, 3, 4, 2, 3, 1, 4, 2, 5, 4, 3,
					5, 3, 6, 4, 127, 2, 8, 5, 8, 127, 2, 6, 5, 6 },
			// ASCII(142)
			{ 7, 4, 1, 11, 7, 11 },
			// ASCII(143)
			{ 7, 10, 4, 10, 3, 11, 4, 12, 5, 11, 4, 10 },
			// ASCII(144)
			{ 7, 23, 6, 9, 5, 10, 3, 10, 2, 9, 2, 5, 3, 4, 5, 4, 6, 5, 127, 4,
					4, 4, 2, 3, 2 },
			// ASCII(145)
			{ 7, 19, 5, 8, 3, 8, 2, 7, 2, 5, 3, 4, 5, 4, 127, 4, 4, 4, 2, 3, 2 },
			// ASCII(146)
			{ 7, 21, 2, 4, 2, 10, 6, 4, 6, 10, 127, 2, 11, 3, 12, 4, 12, 5, 11,
					6, 11, 7, 12 },
			// ASCII(147)
			{ 7, 28, 2, 4, 2, 8, 127, 2, 6, 4, 8, 5, 8, 6, 7, 6, 4, 127, 2, 10,
					3, 11, 4, 11, 5, 10, 6, 10, 7, 11 },
			// ASCII(148)
			{ 7, 9, 4, 8, 4, 8, 127, 4, 6, 4, 2 },
			// ASCII(149)
			{ 7, 19, 4, 8, 4, 8, 127, 4, 6, 4, 5, 2, 4, 2, 3, 3, 2, 5, 2, 6, 3 },
			// ASCII(150)
			{ 7, 35, 3, 5, 2, 6, 2, 8, 3, 9, 5, 9, 6, 8, 6, 6, 5, 5, 3, 5, 2,
					4, 127, 5, 5, 6, 4, 127, 3, 9, 2, 10, 127, 5, 9, 6, 10 },
			// ASCII(151)
			{ 7, 27, 6, 10, 5, 11, 4, 11, 3, 10, 3, 4, 2, 3, 1, 4, 2, 5, 4, 3,
					5, 3, 6, 4, 127, 2, 7, 5, 7 },
			// ASCII(152)
			{ 7, 25, 2, 10, 2, 9, 4, 7, 4, 4, 127, 6, 10, 6, 9, 4, 7, 127, 3,
					6, 5, 6, 127, 3, 5, 5, 5 },
			// ASCII(153)
			{ 7, 41, 5, 10, 4, 11, 3, 11, 2, 10, 2, 9, 3, 8, 4, 8, 5, 7, 5, 6,
					4, 5, 127, 3, 8, 2, 7, 2, 6, 3, 5, 4, 5, 5, 4, 5, 3, 4, 2,
					3, 2, 2, 3 },
			// ASCII(154)
			{ 7, 17, 6, 10, 5, 10, 4, 9, 4, 4, 3, 3, 2, 4, 127, 3, 8, 5, 8 },
			// ASCII(155)
			{ 7, 17, 5, 8, 3, 8, 2, 7, 2, 5, 3, 4, 5, 4, 127, 4, 9, 4, 3 },
			// ASCII(156)
			{ 7, 28, 3, 8, 5, 8, 6, 7, 6, 4, 127, 6, 5, 5, 6, 3, 6, 2, 5, 3, 4,
					7, 4, 127, 3, 10, 4, 11, 5, 10 },
			// ASCII(157)
			{ 7, 25, 2, 6, 6, 6, 6, 7, 5, 8, 3, 8, 2, 7, 2, 5, 3, 4, 6, 4, 127,
					3, 10, 4, 11, 5, 10 },
			// ASCII(158)
			{ 7, 25, 5, 4, 3, 4, 2, 5, 2, 7, 3, 8, 5, 8, 6, 7, 6, 5, 5, 4, 127,
					3, 10, 4, 11, 5, 10 },
			// ASCII(159)
			{ 7, 24, 2, 8, 2, 5, 3, 4, 5, 4, 6, 5, 127, 6, 8, 6, 5, 7, 4, 127,
					3, 10, 4, 11, 5, 10 },
			// ASCII(160)
			{ 7, 26, 3, 8, 5, 8, 6, 7, 6, 4, 127, 6, 5, 5, 6, 3, 6, 2, 5, 3, 4,
					7, 4, 127, 3, 10, 5, 12 },
			// ASCII(161)
			{ 7, 23, 2, 6, 6, 6, 6, 7, 5, 8, 3, 8, 2, 7, 2, 5, 3, 4, 6, 4, 127,
					3, 10, 5, 12 },
			// ASCII(162)
			{ 7, 23, 5, 4, 3, 4, 2, 5, 2, 7, 3, 8, 5, 8, 6, 7, 6, 5, 5, 4, 127,
					3, 10, 5, 12 },
			// ASCII(163)
			{ 7, 22, 2, 8, 2, 5, 3, 4, 5, 4, 6, 5, 127, 6, 8, 6, 5, 7, 4, 127,
					3, 10, 5, 12 },
			// ASCII(164)
			{ 7, 26, 3, 8, 5, 8, 6, 7, 6, 4, 127, 6, 5, 5, 6, 3, 6, 2, 5, 3, 4,
					7, 4, 127, 5, 10, 3, 12 },
			// ASCII(165)
			{ 7, 23, 2, 6, 6, 6, 6, 7, 5, 8, 3, 8, 2, 7, 2, 5, 3, 4, 6, 4, 127,
					5, 10, 3, 12 },
			// ASCII(166)
			{ 7, 23, 5, 4, 3, 4, 2, 5, 2, 7, 3, 8, 5, 8, 6, 7, 6, 5, 5, 4, 127,
					5, 10, 3, 12 },
			// ASCII(167)
			{ 7, 22, 2, 8, 2, 5, 3, 4, 5, 4, 6, 5, 127, 6, 8, 6, 5, 7, 4, 127,
					5, 10, 3, 12 },
			// ASCII(168)
			{ 7, 43, 3, 8, 5, 8, 6, 7, 6, 4, 127, 6, 5, 5, 6, 3, 6, 2, 5, 3, 4,
					7, 4, 127, 3, 10, 2, 10, 2, 11, 3, 11, 3, 10, 127, 5, 10,
					6, 10, 6, 11, 5, 11, 5, 10 },
			// ASCII(169)
			{ 7, 40, 2, 6, 6, 6, 6, 7, 5, 8, 3, 8, 2, 7, 2, 5, 3, 4, 6, 4, 127,
					3, 10, 2, 10, 2, 11, 3, 11, 3, 10, 127, 5, 10, 6, 10, 6,
					11, 5, 11, 5, 10 },
			// ASCII(170)
			{ 7, 40, 5, 4, 3, 4, 2, 5, 2, 7, 3, 8, 5, 8, 6, 7, 6, 5, 5, 4, 127,
					3, 10, 2, 10, 2, 11, 3, 11, 3, 10, 127, 5, 10, 6, 10, 6,
					11, 5, 11, 5, 10 },
			// ASCII(171)
			{ 7, 39, 2, 8, 2, 5, 3, 4, 5, 4, 6, 5, 127, 6, 8, 6, 5, 7, 4, 127,
					3, 10, 2, 10, 2, 11, 3, 11, 3, 10, 127, 5, 10, 6, 10, 6,
					11, 5, 11, 5, 10 },
			// ASCII(172)
			{ 7, 28, 2, 4, 2, 9, 3, 10, 5, 10, 6, 9, 6, 4, 127, 6, 6, 2, 6,
					127, 4, 10, 3, 11, 4, 12, 5, 11, 4, 10 },
			// ASCII(173)
			{ 7, 18, 3, 8, 4, 8, 4, 4, 127, 3, 4, 5, 4, 127, 3, 10, 4, 11, 5,
					10 },
			// ASCII(174)
			{ 7, 20, 2, 5, 2, 9, 3, 10, 5, 10, 6, 9, 6, 5, 5, 4, 3, 4, 2, 5, 6,
					9 },
			// ASCII(175)
			{ 7, 25, 1, 4, 1, 8, 3, 10, 7, 10, 127, 4, 10, 4, 4, 7, 4, 127, 1,
					6, 4, 6, 127, 4, 7, 7, 7 },
			// ASCII(176)
			{ 7, 32, 3, 8, 5, 8, 6, 7, 6, 4, 127, 6, 5, 5, 6, 3, 6, 2, 5, 3, 4,
					7, 4, 127, 4, 10, 3, 11, 4, 12, 5, 11, 4, 10 },
			// ASCII(177)
			{ 7, 16, 3, 8, 4, 8, 4, 4, 127, 3, 4, 5, 4, 127, 3, 10, 5, 12 },
			// ASCII(178)
			{ 7, 20, 3, 4, 2, 5, 2, 7, 3, 8, 5, 8, 6, 7, 6, 5, 5, 4, 3, 4, 5, 8 },
			// ASCII(179)
			{ 7, 33, 1, 8, 3, 8, 4, 7, 4, 5, 5, 4, 7, 4, 127, 4, 5, 3, 4, 2, 4,
					1, 5, 2, 6, 7, 6, 7, 7, 6, 8, 5, 8, 4, 7 },
			// ASCII(180)
			{ 7, 39, 2, 4, 2, 9, 3, 10, 5, 10, 6, 9, 6, 4, 127, 6, 6, 2, 6,
					127, 3, 11, 2, 11, 2, 12, 3, 12, 3, 11, 127, 5, 11, 6, 11,
					6, 12, 5, 12, 5, 11 },
			// ASCII(181)
			{ 7, 16, 3, 8, 4, 8, 4, 4, 127, 3, 4, 5, 4, 127, 5, 10, 3, 12 },
			// ASCII(182)
			{ 7, 40, 2, 5, 2, 9, 3, 10, 5, 10, 6, 9, 6, 5, 5, 4, 3, 4, 2, 5,
					127, 3, 11, 2, 11, 2, 12, 3, 12, 3, 11, 127, 5, 11, 6, 11,
					6, 12, 5, 12, 5, 11 },
			// ASCII(183)
			{ 7, 34, 2, 10, 2, 5, 3, 4, 5, 4, 6, 5, 6, 10, 127, 3, 11, 2, 11,
					2, 12, 3, 12, 3, 11, 127, 5, 11, 6, 11, 6, 12, 5, 12, 5, 11 },
			// ASCII(184)
			{ 7, 20, 6, 10, 2, 10, 2, 7, 4, 7, 127, 2, 7, 2, 4, 6, 4, 127, 4,
					11, 5, 12 },
			// ASCII(185)
			{ 7, 33, 3, 8, 4, 8, 4, 4, 127, 3, 4, 5, 4, 127, 3, 10, 2, 10, 2,
					11, 3, 11, 3, 10, 127, 5, 10, 6, 10, 6, 11, 5, 11, 5, 10 },
			// ASCII(186)
			{ 7, 27, 2, 3, 2, 9, 3, 10, 5, 10, 6, 9, 6, 8, 5, 7, 3, 7, 127, 5,
					7, 6, 6, 6, 5, 5, 4, 3, 4 },
			// ASCII(187)
			{ 7, 25, 5, 4, 3, 4, 2, 5, 2, 9, 3, 10, 5, 10, 6, 9, 6, 5, 5, 4,
					127, 3, 11, 4, 12, 5, 11 },
			// ASCII(188)
			{ 7, 22, 2, 4, 2, 9, 3, 10, 5, 10, 6, 9, 6, 4, 127, 6, 6, 2, 6,
					127, 4, 11, 5, 12 },
			// ASCII(189)
			{ 7, 30, 2, 4, 2, 9, 3, 10, 5, 10, 6, 9, 6, 4, 127, 6, 6, 2, 6,
					127, 2, 11, 3, 12, 4, 12, 5, 11, 6, 11, 7, 12 },
			// ASCII(190)
			{ 7, 34, 3, 8, 5, 8, 6, 7, 6, 4, 127, 6, 5, 5, 6, 3, 6, 2, 5, 3, 4,
					7, 4, 127, 2, 10, 3, 11, 4, 11, 5, 10, 6, 10, 7, 11 },
			// ASCII(191)
			{ 7, 22, 2, 4, 5, 4, 6, 5, 6, 9, 5, 10, 2, 10, 127, 2, 10, 2, 4,
					127, 1, 7, 3, 7 },
			// ASCII(192)
			{ 7, 26, 6, 5, 5, 4, 3, 4, 2, 5, 2, 7, 3, 8, 5, 8, 6, 7, 127, 6, 4,
					6, 10, 127, 5, 9, 7, 9 },
			// ASCII(193)
			{ 7, 19, 3, 10, 5, 10, 127, 4, 10, 4, 4, 127, 3, 4, 5, 4, 127, 4,
					11, 5, 12 },
			// ASCII(194)
			{ 7, 19, 3, 10, 5, 10, 127, 4, 10, 4, 4, 127, 3, 4, 5, 4, 127, 4,
					11, 3, 12 },
			// ASCII(195)
			{ 7, 23, 5, 4, 3, 4, 2, 5, 2, 9, 3, 10, 5, 10, 6, 9, 6, 5, 5, 4,
					127, 4, 11, 5, 12 },
			// ASCII(196)
			{ 7, 23, 5, 4, 3, 4, 2, 5, 2, 9, 3, 10, 5, 10, 6, 9, 6, 5, 5, 4,
					127, 4, 11, 3, 12 },
			// ASCII(197)
			{ 7, 31, 5, 4, 3, 4, 2, 5, 2, 9, 3, 10, 5, 10, 6, 9, 6, 5, 5, 4,
					127, 2, 11, 3, 12, 4, 12, 5, 11, 6, 11, 7, 12 },
			// ASCII(198)
			{ 7, 31, 5, 4, 3, 4, 2, 5, 2, 7, 3, 8, 5, 8, 6, 7, 6, 5, 5, 4, 127,
					2, 10, 3, 11, 4, 11, 5, 10, 6, 10, 7, 11 },
			// ASCII(199)
			{ 7, 31, 2, 5, 3, 4, 5, 4, 6, 5, 6, 6, 5, 7, 3, 7, 2, 8, 2, 9, 3,
					10, 5, 10, 6, 9, 127, 3, 12, 4, 11, 5, 12 },
			// ASCII(200)
			{ 7, 23, 2, 4, 5, 4, 6, 5, 5, 6, 3, 6, 2, 7, 3, 8, 6, 8, 127, 3,
					11, 4, 10, 5, 11 },
			// ASCII(201)
			{ 7, 17, 2, 10, 2, 5, 3, 4, 5, 4, 6, 5, 6, 10, 127, 4, 11, 5, 12 },
			// ASCII(202)
			{ 7, 37, 2, 10, 2, 9, 4, 7, 4, 4, 127, 6, 10, 6, 9, 4, 7, 127, 3,
					11, 2, 11, 2, 12, 3, 12, 3, 11, 127, 5, 11, 6, 11, 6, 12,
					5, 12, 5, 11 },
			// ASCII(203)
			{ 7, 33, 2, 2, 3, 2, 6, 8, 127, 2, 8, 4, 5, 127, 3, 10, 2, 10, 2,
					11, 3, 11, 3, 10, 127, 5, 10, 6, 10, 6, 11, 5, 11, 5, 10 },
			// ASCII(204)
			{ 7, 25, 2, 10, 4, 10, 127, 3, 10, 3, 4, 127, 2, 4, 4, 4, 127, 3,
					9, 5, 9, 6, 8, 5, 7, 3, 7 },
			// ASCII(205)
			{ 7, 19, 2, 8, 3, 8, 3, 2, 2, 2, 127, 3, 7, 5, 7, 6, 6, 5, 5, 3, 5 },
			// ASCII(206)
			{ 7, 4, 1, 7, 7, 7 },
			// ASCII(207)
			{ 7, 21, 4, 11, 4, 9, 127, 2, 7, 6, 7, 127, 3, 5, 3, 3, 6, 3, 127,
					5, 5, 5, 2 },
			// ASCII(208)
			{ 7, 20, 4, 11, 4, 9, 127, 2, 7, 6, 7, 127, 3, 5, 4, 5, 5, 4, 3, 2,
					5, 2 },
			// ASCII(209)
			{ 7, 26, 3, 10, 5, 10, 6, 9, 6, 6, 127, 6, 7, 5, 8, 3, 8, 2, 7, 3,
					6, 6, 6, 127, 2, 4, 6, 4 },
			// ASCII(210)
			{ 7, 23, 5, 6, 3, 6, 2, 7, 2, 9, 3, 10, 5, 10, 6, 9, 6, 7, 5, 6,
					127, 2, 4, 6, 4 },
			// ASCII(211)
			{ 7, 13, 4, 8, 2, 6, 4, 4, 127, 6, 8, 4, 6, 6, 4 },
			// ASCII(212)
			{ 7, 34, 2, 4, 7, 4, 127, 2, 5, 7, 5, 127, 2, 6, 7, 6, 127, 2, 7,
					7, 7, 127, 2, 8, 7, 8, 127, 2, 9, 7, 9, 127, 2, 10, 7, 10 },
			// ASCII(213)
			{ 7, 13, 2, 8, 4, 6, 2, 4, 127, 4, 8, 6, 6, 4, 4 },
			// ASCII(214)
			{ 7, 14, 4, 10, 4, 6, 127, 2, 8, 6, 8, 127, 2, 4, 6, 4 }, };

	/**
	 * Draw a string with this font.
	 * 
	 * @param g
	 *            - the context to draw on.
	 * @param s
	 *            - the string to draw.
	 * @param x
	 *            - starting point.
	 * @param y
	 *            - starting point.
	 */

	/**
	 * Set the character size of a capital letter (e.g. 'A' or 'X')
	 * 
	 * @param sx
	 *            - width in pixels
	 * @param sy
	 *            - height in pixels
	 */
	void setSize ( int sx, int sy )
	{
		// original raster size is 5 x 7 points
		m_xFactor = sx / 5f;
		m_yFactor = sx / 7f;
	}

	void setSlant ( boolean slanted )
	{
		m_slanted = slanted;
	}

	/**
	 * The reference point for the rotation is at the baseline lower left corner
	 * of the character cell.
	 * 
	 * @param angle
	 *            angle between baseline and x-axis in degrees (extension of HP
	 *            specification)<br>
	 */
	void setOrientation ( int angle )
	{
		m_angle = angle;
	}

	/**
	 * Draw a string.
	 * 
	 * @param g
	 *            the context to draw into.
	 * @param s
	 *            the string to draw.
	 * @param x
	 *            the horizontal coordinate of the starting point.
	 * @param y
	 *            the vertical coordinate of the starting point.
	 */
	void drawString ( Graphics g, String s, int x, int y )
	{
		Point pt = new Point(x, y);

		for (int i = 0; i < s.length(); i++)
		{
			char c = s.charAt(i);
			Point ptDelta = drawChar(g, c, pt);
			pt.x += ptDelta.x;
			pt.y += ptDelta.y;
		}
	}

	/**
	 * Draw a single character.
	 * 
	 * @param g
	 *            - The context to draw into.
	 * @param c
	 *            - The character to draw.
	 * @param pt
	 *            - The starting point.
	 * @return The advance vector for drawing the next character
	 */
	Point drawChar ( Graphics g, int c, Point pt )
	{
		// default: no advance
		Point ret = new Point(0, 0);

		if (c >= 32 && c <= 214)
		{
			// working point
			int x = pt.x;
			int y = pt.y;

			c -= 32;

			byte bb[] = charVector[c];

			int pointCount = (int) bb[1];
			int charWidth = (int) bb[0];

			// actual width (unrotated)
			charWidth = (int) ((float) charWidth * m_xFactor);

			// advance vector (rotated)
			ret.x = dxTransformed(charWidth, 0);
			ret.y = dyTransformed(charWidth, 0);

			// move (x,y) point to baseline
			y = y + (int) (3 * m_yFactor);

			if (pointCount > 0)
			{
				int dx;
				int dy;
				int xPrev = 0;
				int yPrev = 0;

				int xPt = 127;

				for (int i = 2;;)
				{
					if (xPt == 127)
					{
						// moveto
						xPt = bb[i++] & 0xff;
						int yPt = bb[i++] & 0xff;

						if (m_slanted)
							xPt += (yPt - 10) / m_xFactor;

						dx = (int) (xPt * m_xFactor);
						dy = (int) (yPt * m_yFactor);
						// transform for rotation
						xPrev = x + dxTransformed(dx, dy);
						yPrev = y + dyTransformed(dx, dy);
					}
					else
					{
						// lineto
						int yPt = bb[i++] & 0xff;
						if (m_slanted)
							xPt += (yPt - 10) / m_xFactor;

						dx = (int) (xPt * m_xFactor);
						dy = (int) (yPt * m_yFactor);
						// transform for rotation
						xPt = x + dxTransformed(dx, dy);
						yPt = y + dyTransformed(dx, dy);
						g.drawLine(xPrev, yPrev, xPt, yPt);
						xPrev = xPt;
						yPrev = yPt;
					}

					// done?
					if (i == 2 + pointCount)
						break;

					// next point
					xPt = bb[i++] & 0xff;
				}
			}
		}

		return ret;
	}

	/**
	 * Determine the x-coordinate of a point rotated in steps of 90 degrees.
	 * Uses the private variable m_angle.
	 * 
	 * dxTransformed = dx*cos(phi) - dy*sin(phi)
	 * 
	 * (Coordinate system: positive y = down)
	 * 
	 * @param dx
	 *            - The x coordinate of the point to transform.
	 * @param dy
	 *            - The y coordinate of the point to transform.
	 * @return The x-coordinate of the transformed point.
	 */
	private int dxTransformed ( int dx, int dy )
	{
		switch (m_angle)
		{
		case ANGLE_0:
			return dx;
		case ANGLE_90:
			return -dy;
		case ANGLE_180:
			return -dx;
		case ANGLE_270:
			return dy;
		default:
			// not per HP spec - integer value will lead to jagged looks
			return (int) (dx * Math.cos(m_angle * 0.01745329252) - dy
					* Math.sin(m_angle * 0.01745329252));
		}
	}

	/**
	 * Determine the y-coordinate of a point rotated in steps of 90 degrees.
	 * Uses the private variable m_angle.
	 * 
	 * dyTransformed = -(dx*sin(phi) + dy*cos(phi))
	 * 
	 * (Coordinate system: positive y = down)
	 * 
	 * @param dx
	 *            - The x coordinate of the point to transform.
	 * @param dy
	 *            - The y coordinate of the point to transform.
	 * @return The x-coordinate of the transformed point.
	 */
	private int dyTransformed ( int dx, int dy )
	{
		switch (m_angle)
		{
		case ANGLE_0:
			return -dy;
		case ANGLE_90:
			return -dx;
		case ANGLE_180:
			return dy;
		case ANGLE_270:
			return dx;
		default:
			// not per HP spec - integer value will lead to jagged looks
			return (int) (-dx * Math.sin(m_angle * 0.01745329252) + dy
					* Math.cos(m_angle * 0.01745329252));
		}
	}
}
